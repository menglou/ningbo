//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuilingTest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsConnect", ReplyAction="http://tempuri.org/IService1/IsConnectResponse")]
        bool IsConnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsConnect", ReplyAction="http://tempuri.org/IService1/IsConnectResponse")]
        System.Threading.Tasks.Task<bool> IsConnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetElectricMeter", ReplyAction="http://tempuri.org/IService1/GetElectricMeterResponse")]
        System.Data.DataTable GetElectricMeter(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetElectricMeter", ReplyAction="http://tempuri.org/IService1/GetElectricMeterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetElectricMeterAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWaterMeter", ReplyAction="http://tempuri.org/IService1/GetWaterMeterResponse")]
        System.Data.DataTable GetWaterMeter(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWaterMeter", ReplyAction="http://tempuri.org/IService1/GetWaterMeterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetWaterMeterAsync(string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : BuilingTest.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<BuilingTest.ServiceReference1.IService1>, BuilingTest.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsConnect() {
            return base.Channel.IsConnect();
        }
        
        public System.Threading.Tasks.Task<bool> IsConnectAsync() {
            return base.Channel.IsConnectAsync();
        }
        
        public System.Data.DataTable GetElectricMeter(string password) {
            return base.Channel.GetElectricMeter(password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetElectricMeterAsync(string password) {
            return base.Channel.GetElectricMeterAsync(password);
        }
        
        public System.Data.DataTable GetWaterMeter(string password) {
            return base.Channel.GetWaterMeter(password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetWaterMeterAsync(string password) {
            return base.Channel.GetWaterMeterAsync(password);
        }
    }
}
